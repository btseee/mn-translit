# üêç Build, Test, and Publish Python package to PyPI
# Docs: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'   # Only publish on version tags (e.g., v0.1.0)
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest
      
      - name: Run tests
        run: pytest -v

  publish:
    # Only run publish if tests succeed AND it's a version tag
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install and build with latest tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          python -m build

      - name: Verify package contents
        run: |
          echo "--- Listing files in workspace ---"
          ls -lR
          echo "--- Inspecting the generated wheel ---"
          pip install wheel
          unzip -l dist/*.whl
          WHEEL_FILE=$(ls dist/*.whl)
          echo "--- Contents of METADATA ---"
          unzip -p $WHEEL_FILE *.dist-info/METADATA

      - name: Publish to PyPI with Twine üöÄ
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python -m twine upload --repository pypi dist/*
